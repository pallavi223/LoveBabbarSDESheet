



Node<int>* solve(Node<int>* first, Node<int>* second){
  
     //if only one element is present in first list than points to entire second list
    if(first->next == NULL){
        //directly points to curr2
        first->next = second;
        return first;
    }
    
    Node<int>* curr1 = first;
    Node<int>* next1 = curr1->next;
    Node<int>* curr2 = second;
    Node<int>* next2 = curr2 ->next;
      
    while(next1 != NULL && curr2 != NULL){
        if((curr2->data >= curr1->data) && (curr2->data <= next1->data)){
            
            //added node in between first list
            curr1->next = curr2;
            next2 = curr2->next;
            curr2->next = next1;
            curr1 = curr2;
            curr2 = next2;
        }
        else{
            //if condition fails than curr1 & next1 ko aage badhna ha
            curr1 = next1;
            next1 = next1->next;
            //age bdhane k baad dkhna ki next1 khi null pe na pahuch gya ho
            if(next1 == NULL){
                curr1->next = curr2;
                return first;
            }         
        }       
    }
    return first;
}

Node<int>* sortTwoLists(Node<int>* first, Node<int>* second)
{
 
    
    if(first == NULL)
        return second;
    
    if(second == NULL)
        return first;
    
    if(first->data <= second->data){
         solve(first, second);
    }
    else{
        solve(second,first);
    }
    
    
}
